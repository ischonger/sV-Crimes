}
rm
for(i in 1:loops) {
betas1 <- simulation()
Sys.sleep(2)
betas2 <- simulation()
rm[i,1] <- betas1[1]
rm[i,2] <- betas1[2]
rm[i,3] <- betas2[1]
rm[i,4] <- betas2[2]
}
compare <- function(loops = 10) {
rm <- matrix(ncol = 4, nrow = loops)
for(i in 1:loops) {
betas1 <- simulation(seed = sample(1:100000, 1))
Sys.sleep(2)
betas2 <- simulation(seed = sample(1:100000, 1))
rm[i,1] <- betas1[1]
rm[i,2] <- betas1[2]
rm[i,3] <- betas2[1]
rm[i,4] <- betas2[2]
}
return(c(mean(rm[,3]) / mean(rm[,1]),  mean(rm[,4]) / mean(rm[,2])))
}
compare <- function(loops = 10) {
rm <- matrix(ncol = 4, nrow = loops)
for(i in 1:loops) {
betas1 <- simulation(seed = sample(1:100000, 1))
Sys.sleep(2)
betas2 <- simulation(seed = sample(1:100000, 1))
rm[i,1] <- betas1[1]
rm[i,2] <- betas1[2]
rm[i,3] <- betas2[1]
rm[i,4] <- betas2[2]
}
return(c(mean(rm[,3]) / mean(rm[,1]),  mean(rm[,4]) / mean(rm[,2])))
}
compare()
betas1 <- simulation(seed = sample(1:100000, 1), amount = 90)
seq(1000:100)
10:1
1000:100
seq(1000:100, 100)
seq(from = 1000, to = 100, by = 100)
?seq
seq(1000, 100, by = 100)
seq(1000, 50, 50)
seq(1000, 50, by = -50)
theta
rnegbin(100, theta = mDensity$call$init.theta)
plot(rnegbin(100, theta = mDensity$call$init.theta))
plot(rnegbin(100, theta = 1))
plot(rpois(100))
plot(rpois(100, lambda = 1))
plot(rpois(100, lambda = 2))
plot(rpois(100, lambda = 3))
plot(rnegbin(100, theta = 1))
plot(rnegbin(100, theta = 0.7))
plot(rnegbin(100, theta = mDensity$call$init.theta))
mDensity$call$init.theta
plot(rnegbin(100, theta = 0.5))
plot(rnegbin(100, theta = 0.9))
plot(rnegbin(100, theta = 10.0))
plot(rnegbin(100, theta = 2))
plot(rnegbin(100, theta = 1))
plot(rnegbin(100, theta = .3))
?sample
plot(rnegbin(100, theta = .3))
plot(rnegbin(100, theta = 1))
plot(rnegbin(100, theta = .7))
line(plot(rnegbin(100, theta = .7)))
lines(rnegbin(100, theta = .7))
lines(rnegbin(30, theta = .7), col = "blue")
plot(rnegbin(100, theta = .7))
lines(rnegbin(50, theta = .7), col = "blue")
plot(rnegbin(100, theta = .7))
lines(rnegbin(50, theta = .7), col = "blue")
lines(rnegbin(seq(1, 100, by = 10), theta = .7), col = "blue")
plot(rnegbin(100, theta = .7))
lines(rnegbin(seq(1, 100, by = 10), theta = .7), col = "blue")
plot(rnegbin(100, theta = .7))
plot(rnegbin(c(1, 25, 50, 75, 100), theta = .7))
plot(rnegbin(100, theta = .7))
lines(rnegbin(c(1,25,50,75,100), theta = .7), col = "blue")
plot(rnegbin(100, theta = .7))
#setwd(dir = "~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/")
crimes.data <- read.csv("crimes.csv")
head(crimes.data)
plot(crimes.data$crimes~crimes.data$prbarr)
plot(crimes.data$crimes, crimes.data$prbarr)
#---------------------------------------------------------------------------------##
##----------------------- 1. ansatz: ausprobieren -------------------------------##
cpa <- crimes.data$crimes/crimes.data$area # crimes per area
m0 <- glm.nb(crimes~1+prbarr, data = crimes.data)
plot(m0)
mAllP <- glm.nb(crimes~1+prbarr+prbpris+polpc+density+area+taxpc+region+pctmin+pctymale+wcon+wsta+wser+wtrd+wfir,
data = crimes.data)
mAll2 <- glm((crimes~(1+prbarr+prbpris+polpc+density+area+taxpc+region+pctmin+pctymale+wcon+wsta+wser+wtrd+wfir)^2), data = crimes.data)
plot(mAll2)
mAll2P <- glm.nb((crimes~(1+prbarr+prbpris+polpc+density+area+taxpc+region+pctmin+pctymale+wcon+wsta+wser+wtrd+wfir)^2),
data = crimes.data)
plot(mAll2, which = 1)
step(mAll2, ~(1+prbarr+prbpris+polpc+density+area+taxpc+region+pctmin+pctymale+wcon+wsta+wser+wtrd+wfir)^2)
anova(m0, mAll, test = "LRT")
AIC(m0, mAll, mAllP)
cv(m0); cv(mAll); cv(mAllP)
# family = poisson verschlechtert das ergebnis ... und zwar erheblich
# !!! nicht family = poisson benützen!
# sonder glm.nb()!!!!
m1 <- glm(crimes~1+prbarr:prbpris, data = crimes.data)
plot(m1)
AIC(m0, mAll, m1Nb)
mAll2 <- glm.nb(crimes~(1+prbarr+prbpris+polpc+density+area+taxpc+region+pctmin+pctymale+wcon+wsta+wser+wtrd+wfir)^2, data = crimes.data)
add1(m1, scope = ~(1+prbarr+prbpris+polpc+density+area+taxpc)^2)
m2 <- glm.nb(crimes~(1+prbarr+prbpris)^2, data = crimes.data)
add1(m2, prbarr)
AIC(m0, mAll, mAll2, m1, m2, m2Nb)
BIC(m0, mAll, mAll2, m1, m2, m2Nb)
?AIC
AIC(m0, mAll, m1Nb, m2)
mSpatial1 <- glm.nb(crimes~(density+area), data = crimes.data)
mSpatial2 <- glm.nb(crimes~(density+area)^2, data = crimes.data)
mSpatial3 <- glm.nb(crimes~(density+area+region), data = crimes.data)
mSpatial4 <- glm.nb(crimes~(density+area+region)^2, data = crimes.data)
AIC(mSpatial1, mSpatial2, mSpatial3, mSpatial4)
cv(mSpatial1); cv(mSpatial2); cv(mSpatial3); cv(mSpatial4)
mTrade <- glm.nb(crimes~(1+wsta+wser+wtrd+wfir)^2, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m1Nb, m2, m2Nb, mTrade)
cv(m0); cv(mAll); cv(m1); cv(m1Nb); cv(m2); cv(m2Nb); cv(mTrade)
plot(mTrade, which = 1)
plot(crimes.data$crimes, crimes.data$prbarr)
plot(crimes.data$crimes, crimes.data$prbpris)
mArrest <- glm.nb(crimes~(1+prbarr), data = crimes.data)
plot(mArrest, which = 1)
AIC(m0, mAll, m1, m1Nb, m2, m2Nb, mTrade, mArrest)
cv(m0); cv(mAll); cv(m1); cv(m1Nb); cv(m2); cv(m2Nb); cv(mTrade)
add1(mArrest, scope = ~(1+crimes.data$prbarr))
#maxY <- max(crimes.data$crimes)
#maxY
#normY <- crimes.data$crimes/maxY
#normY
#plot(normY, crimes.data$prbarr)
#mArrestNorm <- glm.nb(normY~(1+prbarr), data = crimes.data)
#AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm)
mArea <- glm.nb(crimes~1+area, data = crimes.data)
plot(mArea, which = 1)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArea)
cv(m0); cv(mAll); cv(m1); cv(m1Nb); cv(m2); cv(m2Nb); cv(mTrade); cv(mArrest); cv(mArea)
plot(crimes.data$crimes, crimes.data$area)
plot(crimes.data$crimes, crimes.data$density)
mDensity <- glm.nb(crimes~1+density, data = crimes.data)
plot(mDensity, which = 1)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity)
m3 <- glm.nb(crimes~1+area+density+area:density, data = crimes.data)
AIC(m0, mAll, m1,m1Nb, m2, m2Nb, mTrade, mArrest, mArea, mDensity, m3)
cv(m0); cv(mAll); cv(m1); cv(m1Nb); cv(m2); cv(m2Nb); cv(mTrade); cv(mArrest); cv(mArea); cv(mDensity); cv(m3)
# crimes~1+area+density+area:density => 1549
# cpa~1+area:density => 581
# cpa~1+area+density+area:density => 426. bis jetzt beste!
plot(m3, which = 1)
coef(m3)
anova(m3)
## bestes modell, wenn ein lohn-eingabevektor hinzugenommen wird:
m3Wser <- glm.nb(crimes~1+area+density+area:density+wser, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArea, mDensity, m3, m3Wser)
cv(m0); cv(mAll); cv(m1); cv(m1Nb); cv(m2); cv(m2Nb); cv(mTrade); cv(mArrest); cv(mArea); cv(mDensity); cv(m3); cv(m3Wser)
step(m3Wser, ~(1+area+density+wser)^2)
m3Opt <- glm.nb(formula = crimes ~ area + density + wser + area:density +
density:wser, data = crimes.data)
AIC(m3Opt)
cv(m3Opt); cv(m3)
m3Opt <- glm.nb(formula = crimes ~ area + density + wser + area:density +
density:wser, data = crimes.data)
m3Opt2 <- glm.nb(formula = crimes ~ area + density + wser + area:density +
density:wser + prbarr + prbpris, data = crimes.data)
cv(m3Opt2)
cv(m3Opt)
step(m3Opt, ~(1 + area + density + wser + prbarr + prbpris)^2)
m3O2 <- glm.nb(formula = crimes ~ area + density + wser + prbarr + area:density +
density:wser + density:prbarr + wser:prbarr + area:wser,
data = crimes.data, init.theta = 5.146530532, link = log)
AIC(m3O2, m3Opt2, m3Opt)
cv(m3O2); cv(m3Opt2); cv(m3Opt)
anova(m3O2, m3Opt2, m3Opt)
m3O2_p <- glm.nb(formula = crimes ~ area + density + wser + prbarr + area:density +
density:wser + density:prbarr + wser:prbarr + area:prbarr,
data = crimes.data)
cv(m3O2); cv(m3Opt2); cv(m3Opt); cv(m3O2_p)
AIC(m3O2, m3Opt2, m3Opt, m3O)
step(m3O2_p, ~(1+area+density+wser+prbarr+taxpc)^2)
mT <- glm.nb(formula = crimes ~ area + density + wser + prbarr + taxpc +
area:density + density:wser + density:prbarr + wser:prbarr +
area:prbarr + prbarr:taxpc, data = crimes.data)
cv(m3O2); cv(m3Opt2); cv(m3Opt); cv(mT)
AIC(m3O2, m3Opt2, m3Opt, mT)
step(m3O2_p, ~(1+area+density+wser+prbarr+region)^2)
mR <- glm.nb(formula = crimes ~ area + density + wser + prbarr + region +
area:density + density:wser + density:prbarr + wser:prbarr +
area:prbarr + density:region + area:wser, data = crimes.data,
init.theta = 6.810512192, link = log)
cv(m3O2); cv(m3Opt2); cv(m3Opt); cv(mT); cv(mR)
AIC(m3O2, m3Opt2, m3Opt, mT, mR)
#---------------------------------------------------------------------------------#
### frage:
### AIC eignet sich nicht gut als absolutes maß zur beurteilung der güte eines modells.
### kann ich die cv dafür benutzen?
### m3Wser recht gut -
## vergleiche m3 mit einflussgröße crimes / cpa mittels cv
m3WserCPA <- glm.nb(cpa~1+area+density+area:density+wser, data = crimes.data)
AIC(m3WserCPA)
cvM3 <- cbind(cv(m3Wser), cv(m3WserCPA))
cvM3[1,]
# der AIC-wert von cpa-basierten werten war immer recht klein.
# im vergleich mit cv sind solche modelle aber wesentlich schlechter.
cvTest <- cbind(cv(mAll2), cv(m1))
cvTest[1,]
# ein sehr genaues modell hat einen wesentlich kleineren fehler als
# ein sehr ungenaues. ==> passt!
plot(crimes.data$crimes, crimes.data$area)
plot(crimes.data$crimes, crimes.data$region)
aics <- AIC(m0, mAll, m1, m2, mTrade, mArrest, mArea, mDensity,
m3, m3Wser, m3Opt, m3Opt2, m3O2, mT, mR)
plot(aics$AIC)
aics$AIC
min(aics$AIC)
# vergleiche die empirisch gefundenen modelle mittels kreuzvalidierung:
cvE <- cbind(cv(m0), cv(mAll), cv(m1), cv(m2), cv(mTrade), cv(mArrest),
cv(mArea), cv(mDensity),
cv(m3), cv(m3Wser), cv(m3Opt), cv(m3Opt2), cv(m3O2),
cv(mT), cv(mR))
cvC <- cvE[1,]/max(cvE[1,])
plot(cvC)
cvB7 <- cbind(cv(m3Wser), cv(m3Opt), cv(m3Opt2), cv(m3O2),
cv(m3O2_p), cv(mT), cv(mR))
cvB7r<-cvB7[1,]/max(cvB7[1,])
cvB7r
plot(cvB7r)
### kann man cv hier trauen?
########## beliebtestes modell in diesem ansatz nach akaike: mR
AIC(m0, mAll, m1)
AIC(m0, mAll, m1Nb)
AIC(m1, m1Nb)
?xtable
install.packages("xtable")
require(xtbale)
require(xtable)
xtable(m1)
xtable(AIC(m1, m1Nb))
cv(m1)
cv(m1Nb)
deviance(m1)
deviance(m1Nb)
deviance(m1)
m1
deviance(m1Nb)
m1Nb
plot(crimes.data$crimes)
points(rnegbin(90, theta = .3), col = "blue")
plot(crimes.data$crimes)
points(rnegbin(90, theta = .7), col = "blue")
plot(crimes.data$crimes)
points(rnegbin(90, theta = 2), col = "blue")
points(rnegbin(90, theta = .1), col = "blue")
?rnegbin
c <- crimes.data$crimes/max(crimes.data$crimes)
plot(c)
p <- rnegbin(90, theta = 2)
p <- p/max(p)
p
plot(c)
points(p, col = "blue")
p <- rnegbin(90, theta = 0.7)
p <- p/max(p)
plot(c)
points(p, col = "blue")
c <- crimes.data$crimes/max(crimes.data$crimes)
p <- rnegbin(90, theta = 0.7)
p <- p/max(p)
plot(c, col = "red")
points(p, col = "blue")
plot(c, col = "red", pch = 16)
plot(c, col = "red", pch = 10)
plot(c, col = "red", pch = 1)
plot(c, col = "red", pch = 2)
plot(c, col = "red", pch = 3)
plot(c, col = "red", pch = 16)
points(p, col = "blue", pch = 16)
c <- crimes.data$crimes/max(crimes.data$crimes)
p <- rnegbin(90, theta = 0.7)
p <- p/max(p)
plot(c, col = "red", pch = 16)
points(p, col = "blue", pch = 16)
c <- crimes.data$crimes/max(crimes.data$crimes)
p <- rnegbin(90, theta = 0.7)
p <- p/max(p)
plot(c, col = "red", pch = 16)
points(p, col = "blue", pch = 16)
c <- crimes.data$crimes/max(crimes.data$crimes)
p <- rnegbin(90, theta = 0.7)
p <- p/max(p)
plot(c, col = "red", pch = 16)
points(p, col = "blue", pch = 16)
c <- crimes.data$crimes/max(crimes.data$crimes)
p <- rnegbin(90, theta = 0.6)
p <- p/max(p)
plot(c, col = "red", pch = 16)
points(p, col = "blue", pch = 16)
c <- crimes.data$crimes/max(crimes.data$crimes)
p <- rnegbin(90, theta = 0.6)
p <- p/max(p)
plot(c, col = "red", pch = 16)
points(p, col = "blue", pch = 16)
c <- crimes.data$crimes/max(crimes.data$crimes)
p <- rnegbin(90, theta = 0.5
p <- p/max(p)
plot(c, col = "red", pch = 16)
points(p, col = "blue", pch = 16)
c <- crimes.data$crimes/max(crimes.data$crimes)
p <- rnegbin(90, theta = 0.5)
p <- p/max(p)
plot(c, col = "red", pch = 16)
points(p, col = "blue", pch = 16)
c <- crimes.data$crimes/max(crimes.data$crimes)
p <- rnegbin(90, theta = 0.3)
p <- p/max(p)
plot(c, col = "red", pch = 16)
points(p, col = "blue", pch = 16)
c <- crimes.data$crimes/max(crimes.data$crimes)
p <- rnegbin(90, theta = 0.4)
p <- p/max(p)
plot(c, col = "red", pch = 16)
points(p, col = "blue", pch = 16)
r <- rpois(90)
r <- rpois(90, lambda = .3)
plot(r)
r <- rpois(90, lambda = 3)
plot(r)
r <- rnorm(90, lambda = 3)
r <- rnorm(90)
plot(n)
n <- rnorm(90)
plot(n)
?rnorm
n <- rnorm(90, mean = 0.5)
plot(n)
n <- rnorm(90, mean = 5)
plot(n)
n <- rnorm(90, mean = 5, sd = 5)
plot(n)
c <- crimes.data$crimes/max(crimes.data$crimes)
p <- rnegbin(90, theta = 0.4)
p <- p/max(p)
n <- rnorm(90)
plot(n)
par(mfrow=c(1,2))
plot(c, col = "red", pch = 16)
points(p, col = "blue", pch = 16)
plot(c, col = "red", pch = 16)
points(n, col = "yellow", pch = 16)
c <- crimes.data$crimes/max(crimes.data$crimes)
p <- rnegbin(90, theta = 0.4)
p <- p/max(p)
n <- rnorm(90)
plot(n)
par(mfrow=c(1,2))
plot(c, col = "red", pch = 16)
points(p, col = "blue", pch = 16)
plot(c, col = "red", pch = 16)
points(n, col = 3, pch = 16)
crimes.data[name = "alexander"]
crimes.data
mRegion <- glm.nb(crimes~region, data = crimes.data)
cv(mRegion)
# west
crimes.data.west <- crimes.data[crimes.data$region == "west", ]
plot(crimes.data.west$crimes)
plot(crimes~(1+density), data = crimes.data.west, col = region, pch = 16)
pseudo.data <- rnegbin(dim(crimes.data.west)[1], mu = predict(mStep, type = "response"),
theta = 0.9)
points(crimes.data.west$crimes, pseudo.data, col = 15, pch = 16)
# 0.6 sieht ganz gut aus
pseudoWest.data <- rnegbin(21, mu = predict(mStep, type = "response"),
theta = 0.7566)
points(crimes.data.west$crimes, pseudoWest.data, col = 10)
crimes.data.west <- crimes.data[crimes.data$region == "west"]
plot(crimes.data.west$crimes, col = 1)
dim(crimes.data.west) # 21
mean(crimes.data.west$crimes) #1027.381
median(crimes.data.west$crimes) #513
mean(crimes.data.west$density) # 86
median(crimes.data.west$density) # 78
crimes.data.central <- crimes.data[crimes.data$region == "central", ]
points(crimes.data.central$crimes, col = 2)
dim(crimes.data.central) # 34
mean(crimes.data.central$crimes) #4764.882
median(crimes.data.central$crimes) #2172
mean(crimes.data.central$density) # 196
median(crimes.data.central$density) # 143
crimes.data.other <- crimes.data[crimes.data$region == "other", ]
points(crimes.data.other$crimes, col = 3)
dim(crimes.data.other) # 35
mean(crimes.data.other$crimes) #2250.514
median(crimes.data.other$crimes) #1235
mean(crimes.data.other$density) # 101
median(crimes.data.other$density) # 65
crimes.data.noWest <- rbind(crimes.data.central, crimes.data.other)
plot(crimes.data.noWest$crimes, col = 2)
points(pseudo.data2)
points(pseudo.data1, col = "green")
points(pseudo.data, col = "blue")
plot(crimes.data$crimes, crimes.data$density)
crimes.noOutliers <- crimes.data[crimes.data$crimes <= 1000,]
crimes.noOutliers
plot(crimes.noOutliers$crimes, crimes.noOutliers$density)
cor(crimes.data$crimes, as.factor(crimes.data$region))
crimes.matrix <- matrix(unlist(crimes.rl), ncol = 16, byrow = FALSE)
cov(crimes.matrix[,1], crimes.matrix[,7])
mR <- glm.nb(crimes~region+density, data = crimes.data)
mRd <- glm.nb(crimes~region+density+region:density, data = crimes.data)
cv(mR); cv(mDensity); cv(mRd)
# 3003165717
# 3003072715
# 3003120609
AIC(mDensity, mR, mRd)
#          df      AIC
# mDensity  3 1494.419
# mR       16 1405.772
# mRd       7 1473.191
mDensity <- glm.nb(crimes~density, data = crimes.data.central)
plot(crimes.data.central$crimes, crimes.data.central$density)
abline(mDensity$coefficients[1], mDensity$coefficients[2])
cv(mDensity) # 3003195285
mDensity <- glm.nb(crimes~density, data = crimes.data.west)
plot(crimes.data.west$crimes, crimes.data.west$density)
abline(mDensity$coefficients[1], mDensity$coefficients[2])
cv(mDensity) # 3001824612
mDensity <- glm.nb(crimes~density, data = crimes.data.other)
plot(crimes.data.other$crimes, crimes.data.other$density)
abline(mDensity$coefficients[1], mDensity$coefficients[2])
cv(mDensity) # 3002760812
coefficients(mRd)
test(model = mRd, seed = 541543213, theta = 0.6)
test(model = mRd, seed = 685135, theta = 2.802896879)
points(crimes.data.west$crimes, pseudo.data, col = 15, pch = 16)
par(mfrow=c(1,1))
crimes.data.noWest <- rbind(crimes.data.central, crimes.data.other)
plot(crimes.data.noWest$crimes, col = 2)
plot(crimes.data.central, pch = 16, col = 1)
points(crimes.data.west, pch = 16, col = 2)
points(crimes.data.other, pch = 16, col = 3)
plot(crimes.data.central$crimes, pch = 16, col = 1)
points(crimes.data.west$crimes, pch = 16, col = 2)
points(crimes.data.other$crimes, pch = 16, col = 3)
cd <- crimes.data.central$crimes/max(crimes.data$crimes)
wd <- crimes.data.west$crimes/max(crimes.data$crimes)
od <- crimes.data.other$crimes/max(crimes.data$crimes)
plot(cd, pch = 16, col = 1)
points(wd, pch = 16, col = 2)
points(od, pch = 16, col = 3)
plot(crimes.data.central$crimes, pch = 16, col = 1, xlab = "Counties", ylab = "crimes")
points(crimes.data.west$crimes, pch = 16, col = 2)
points(crimes.data.other$crimes, pch = 16, col = 3)
plot(crimes.data.central$crimes, pch = 16, col = 1, xlab = "counties", ylab = "crimes")
points(crimes.data.west$crimes, pch = 16, col = 2)
points(crimes.data.other$crimes, pch = 16, col = 3)
plot(crimes~(1+density), data = crimes.data.west, col = region, pch = 16)
plot(crimes~(1+density), data = crimes.data, col = region, pch = 16)
mRd
mRd
mAll
xtable(mAll)
xtable(mAll$call)
mAll
crimes.data$density:crimes.data$region
m0
m1 <- m1Nb
mAll2
mAll
m0
AIC(mAll, m1, m2)
xtable(AIC(mAll, m1, m2))
m2
m2
m1
m2
cv(mAll); cv(m1); cv(m2)
deviance(mAll); deviance(m1); deviance(m2)
xtable(AIC(mSpatial1, mSpatial2, mSpatial3, mSpatial4))
cv(mSpatial1); cv(mSpatial2); cv(mSpatial3); cv(mSpatial4)
devience(mSpatial1); devience(mSpatial2); devience(mSpatial3); devience(mSpatial4)
deviance(mSpatial1); devience(mSpatial2); devience(mSpatial3); devience(mSpatial4)
deviance(mSpatial1); deviance(mSpatial2); deviance(mSpatial3); deviance(mSpatial4)
plot(crimes.data$crimes, crimes.data$prbarr)
plot(crimes.data$crimes, crimes.data$prbpris)
mPct <- glm.nb(crimes~(pctmin+pctymale)^2, data = crimes.data)
xtable(AIC(mPct, mTrade))
plot(crimes.data$crimes, crimes.data$prbarr, pch = 16, col = "blue", xlim = "Crimes", ylim = "prbpris")
plot(crimes.data$crimes, crimes.data$prbarr, pch = 16, col = "blue", xlim = "crimes", ylim = "prbpris")
plot(crimes.data$crimes, crimes.data$prbarr, pch = 16, col = "blue", xlab = "crimes", xlab = "prbpris")
plot(crimes.data$crimes, crimes.data$prbarr, pch = 16, col = "blue", xlab = "crimes", ylab = "prbpris")
points(crimes.data$crimes, crimes.data$prbpris, pch = 16, col = "red")
plot(crimes.data$crimes, crimes.data$prbarr, pch = 1, col = "blue", xlab = "crimes", ylab = "prbpris")
points(crimes.data$crimes, crimes.data$prbpris, pch = 1, col = "red")
plot(crimes.data$crimes, crimes.data$prbarr, pch = 1, col = "blue", xlab = "crimes", ylab = "probability")
points(crimes.data$crimes, crimes.data$prbpris, pch = 1, col = "red")
crimes.data[max(crimes.data$prbarr),]
crimes.data
max(crimes.data$prbarr)
max(crimes.data$crimes)
crimes.data[,max(crimes.data$crimes)]
crimes.data[max(crimes.data$crimes),]
crimes.data
